<%
    let action = "";
    let content = "";
    let cardType = "";
    let method = "post";

    if (typeof card !== "undefined") {
        action = `/${card.id}`;
        content = card.content;
        cardType = card.type;
        method = "put";
    }
%>

<form action="/cards<%= action %>" method="post" class="mt-3">
    <input type="hidden" name="_method" value="<%= method %>">

    <div class="mb-3">
        <label for="content" class="form-label">Content:</label>
        <input type="text" class="form-control" id="content" name="content" required value="<%= content %>">
    </div>

    <div class="mb-3">
        <label for="type" class="form-label">Type:</label>
        <select id="type" name="type" class="form-select" required>
            <% cardTypes.forEach(function(type) { %>
                <option value="<%= type %>" <%= type === cardType ? "selected" : "" %>>
                    <%= type %>
                </option>
            <% }); %>
        </select>
    </div>

    <div class="mb-3 mt-3">
        <h2>Refresh For a Suggested Joke Idea:</h2>
        <p id="suggestedJoke"></p>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>

</form>

<script defer type="module">
    const fetchRandomJoke = async () => {
        let retryCount = 0;
        const maxRetries = 2000;

        while (retryCount < maxRetries) {
            try {
                const response = await fetch('https://v2.jokeapi.dev/joke/Any');
                const jokeData = await response.json();

                if (jokeData.joke !== undefined) {
                    document.getElementById("suggestedJoke").innerHTML = jokeData.joke;
                    console.log(jokeData.joke);
                    break; // Exit the loop if a valid joke is obtained
                } else {
                    console.log("Received undefined joke. Retrying...");
                    retryCount++;
                }
            } catch (error) {
                console.error(error);
                throw error;
            }
        }

        if (retryCount === maxRetries) {
            console.error("Max retries reached. Unable to get a valid joke.");
        }
    };

    fetchRandomJoke();
</script>
